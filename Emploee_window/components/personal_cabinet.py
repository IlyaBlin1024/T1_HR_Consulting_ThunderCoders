import gradio as gr
import re
from components.api_client import get_user_data, update_user_data


def resume_component(user_id: int):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –±—ç–∫–µ–Ω–¥–∞
    user_data = get_user_data(user_id) or {}

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    def validate_phone(phone):
        if phone:
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
            digits = re.sub(r'\D', '', phone)

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if len(digits) == 11:
                return f"+7 ({digits[1:4]}) {digits[4:7]}-{digits[7:9]}-{digits[9:]}"
            elif len(digits) == 10:
                return f"+7 ({digits[0:3]}) {digits[3:6]}-{digits[6:8]}-{digits[8:]}"
            else:
                return digits  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
        return phone

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    def save_resume(full_name, position, email, phone, experience, english_level, location,
                    skills, last_job, work_period, responsibilities, education, specialty,
                    certificates, about):
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        user_data = {
            "full_name": full_name,
            "position": position,
            "email": email,
            "phone": phone,
            "experience_years": float(experience) if experience else 0.0,
            "grade": english_level,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ grade –¥–ª—è —É—Ä–æ–≤–Ω—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
            "department": location,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ department –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏
            "resume_text": f"–ù–∞–≤—ã–∫–∏: {skills}\n\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {last_job}\n–ü–µ—Ä–∏–æ–¥: {work_period}\n–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏: {responsibilities}\n\n–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {education}\n–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: {specialty}\n\n–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: {certificates}\n\n–û —Å–µ–±–µ: {about}"
        }

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥
        success = update_user_data(user_id, user_data)
        return "‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!" if success else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏"

    with gr.Column(elem_classes="t1-card"):
        gr.Markdown("## üìÑ –†–µ–∑—é–º–µ")

        with gr.Row():
            with gr.Column(scale=1):
                gr.Markdown("### –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                with gr.Group():
                    full_name = gr.Textbox(
                        label="–§–ò–û",
                        value=user_data.get('full_name', ''),
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û",
                        interactive=True
                    )
                    position_input = gr.Textbox(
                        label="–î–æ–ª–∂–Ω–æ—Å—Ç—å",
                        value=user_data.get('position', ''),
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Python Developer",
                        interactive=True
                    )
                    email_input = gr.Textbox(
                        label="Email",
                        value=user_data.get('email', ''),
                        placeholder="your.email@example.com",
                        interactive=True
                    )

                    # –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
                    phone_input = gr.Textbox(
                        label="–¢–µ–ª–µ—Ñ–æ–Ω",
                        value=user_data.get('phone', ''),
                        placeholder="+7 (999) 123-45-67",
                        interactive=True,
                        max_lines=1
                    )
                    phone_input.change(
                        fn=validate_phone,
                        inputs=phone_input,
                        outputs=phone_input
                    )

            with gr.Column(scale=1):
                gr.Markdown("### –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                with gr.Group():
                    experience_input = gr.Number(
                        label="–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã (–ª–µ—Ç)",
                        value=user_data.get('experience_years', 0),
                        interactive=True
                    )
                    english_input = gr.Textbox(
                        label="–£—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ",
                        value=user_data.get('grade', ''),
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: Intermediate",
                        interactive=True
                    )
                    location_input = gr.Textbox(
                        label="–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è",
                        value=user_data.get('department', ''),
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞/–£–¥–∞–ª–µ–Ω–Ω–æ",
                        interactive=True
                    )

        gr.Markdown("### –ù–∞–≤—ã–∫–∏")
        with gr.Group():
            skills_input = gr.Textbox(
                label="–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏",
                placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
                interactive=True,
                lines=2
            )

        gr.Markdown("### –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã")
        with gr.Group():
            last_job_input = gr.Textbox(
                label="–ü–æ—Å–ª–µ–¥–Ω–µ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã",
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏",
                interactive=True
            )
            work_period_input = gr.Textbox(
                label="–ü–µ—Ä–∏–æ–¥ —Ä–∞–±–æ—Ç—ã",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 2020-2023",
                interactive=True
            )
            responsibilities_input = gr.Textbox(
                label="–û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏",
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏",
                interactive=True,
                lines=3
            )

        gr.Markdown("### –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
        with gr.Group():
            education_input = gr.Textbox(
                label="–í–£–ó",
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è",
                interactive=True
            )
            specialty_input = gr.Textbox(
                label="–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
                placeholder="–í–∞—à–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å",
                interactive=True
            )

        gr.Markdown("### –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã")
        with gr.Group():
            certificates_input = gr.Textbox(
                label="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã",
                placeholder="–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –≤–∞—à–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã",
                interactive=True,
                lines=2
            )

        gr.Markdown("### –û —Å–µ–±–µ")
        with gr.Group():
            about_input = gr.Textbox(
                label="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ",
                interactive=True,
                lines=3
            )

        # –ö–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_status = gr.Textbox(visible=False)
        with gr.Row():
            save_btn = gr.Button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—é–º–µ", elem_classes="t1-button")
            export_btn = gr.Button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF", elem_classes="t1-button-secondary")

        save_btn.click(
            fn=save_resume,
            inputs=[
                full_name, position_input, email_input, phone_input, experience_input,
                english_input, location_input, skills_input, last_job_input,
                work_period_input, responsibilities_input, education_input,
                specialty_input, certificates_input, about_input
            ],
            outputs=save_status
        )